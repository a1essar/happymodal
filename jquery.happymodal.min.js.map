{"version":3,"sources":["jquery.happymodal.js"],"names":[],"mappings":"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","file":"jquery.happymodal.min.js","sourcesContent":["/* ========================================================================\r\n * HappyModals: jquery.happymodal.js v1.0.0\r\n * ========================================================================\r\n * Copyright 2013 Happycms.ru\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * ======================================================================== \r\n */\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('happymodal', ['jquery'], factory);\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    \r\n    var VERSION = '1.0.0';\r\n    \r\n    // Create the defaults once\r\n    var happymodal = 'happymodal',\r\n        defaults = {\r\n            backdropBlur: false,\r\n            showCallback: function(el){\r\n                \r\n            },\r\n            hideCallback: function(el){\r\n                \r\n            },\r\n        };\r\n\r\n    function Plugin( element, options ) {\r\n        this.element = element;\r\n        this.dialog = '.js__happymodal-dialog';\r\n        this.content = '.js__happymodal-content';\r\n        this.close = '.js__happymodal-close';\r\n        this.backdrop = '.js__happymodal-backdrop';\r\n        \r\n        this.$elements = $('[data-happymodal]');\r\n        this.$element = $(this.element);\r\n        this.$dialog = this.$element.find(this.dialog);\r\n        this.$content = this.$element.find(this.content);\r\n        this.$close = this.$element.find(this.close);\r\n        this.$backdrop = $(this.backdrop);\r\n        this.transition = this.$element.css('transition');\r\n        \r\n        this.$body = $('body');\r\n        this.modalBackdropTemplate = '<div class=\"js__happymodal-backdrop happymodal-backdrop backdrop-hide\"></div>';\r\n\r\n        this.options = $.extend( {\r\n        }, defaults, options, $(this.element).data('happymodal-options')) ;\r\n        \r\n        this._defaults = defaults;\r\n        this._name = happymodal;\r\n        \r\n        this.version = VERSION;\r\n        this.show = this.show;\r\n        this.hide = this.hide;\r\n        \r\n        this.init();\r\n        \r\n        this.bindMethods();\r\n        this.bindEventListeners();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n        init: function() {\r\n            this.render();    \r\n        },\r\n\r\n        render: function() {\r\n            this.draw();\r\n            \r\n            if(this.$backdrop.length <= 0){\r\n                this.$body.append(this.modalBackdropTemplate);\r\n                this.$backdrop = $(this.backdrop);     \r\n            }\r\n        },\r\n        \r\n        draw: function() {\r\n            if(!this.$element.is('.happymodal-open')){\r\n                return false;\r\n            }\r\n            \r\n            this.window = {\r\n                width: $(window).width(),\r\n                height: $(window).height(),\r\n            };\r\n            \r\n            this.modal = {\r\n                width: this.$dialog.width(),\r\n                height: this.$dialog.height(),\r\n            };\r\n            \r\n            if(this.window.height < this.modal.height){\r\n                this.$element.addClass('happymodal-static');\r\n                this.$body.addClass('body-happymodal-static');\r\n                this.$element.css('top', $(window).scrollTop());\r\n            }else{\r\n                this.$element.removeClass('happymodal-static');\r\n                this.$body.removeClass('body-happymodal-static');\r\n            }\r\n        },\r\n        \r\n        show: function() {\r\n            this.$elements.removeClass('happymodal-open');\r\n            this.$element.css('display', 'block').height();\r\n            this.$element.addClass('happymodal-open');\r\n            this.$backdrop.removeClass('backdrop-hide');  \r\n            \r\n            if(this.options.backdropBlur){\r\n                this.$body.find('> *').not('.happymodal-open').addClass('happymodal-blur');    \r\n            }\r\n            \r\n            this.draw();\r\n            \r\n            this.options.showCallback(this);\r\n        },\r\n        \r\n        hide: function(){\r\n            var _this = this;\r\n            this.$element.removeClass('happymodal-open');\r\n            this.$backdrop.addClass('backdrop-hide');\r\n\r\n            if(this.$body.is('.body-happymodal-static')){\r\n                this.$element.css('top', '');\r\n                this.$body.removeClass('body-happymodal-static');\r\n            }\r\n\r\n            if(this.options.backdropBlur){\r\n                this.$body.find('> *').not('.happymodal-open').removeClass('happymodal-blur');   \r\n            }\r\n\r\n            setTimeout(function(){\r\n                _this.$element.css('display', 'none');\r\n            }, 300);\r\n            \r\n            this.draw();\r\n            \r\n            this.options.hideCallback(this);\r\n        },\r\n        \r\n        onHandleCloseClick: function(e){\r\n            this.hide();\r\n            e.preventDefault();    \r\n        },\r\n        \r\n        onHandleModalBackClick: function(e){\r\n            if($(e.target).is('.happymodal-open')){\r\n                this.hide();\r\n                e.preventDefault();       \r\n            }  \r\n        },\r\n        \r\n        bindMethods: function(){\r\n            this.onHandleCloseClick = bind(this.onHandleCloseClick, this);\r\n            this.onHandleModalBackClick = bind(this.onHandleModalBackClick, this);\r\n        },\r\n        \r\n        bindEventListeners: function(){\r\n            addEventListener(this.$element, 'click', this.onHandleModalBackClick);\r\n            addEventListener(this.$close, 'click', this.onHandleCloseClick);\r\n        }\r\n    };\r\n\r\n    $.fn[happymodal] = function ( options ) {\r\n        // global events\r\n        onWindowResize = bind(onWindowResize, this); \r\n        onHandleModalOpenClick = bind(onHandleModalOpenClick, this);\r\n        addEventListener($(window), 'load', onWindowResize); \r\n        addEventListener($(window), 'resize', onWindowResize);\r\n        addEventListener($('[data-happymodal-open]'), 'click', onHandleModalOpenClick);\r\n        \r\n        return this.each(function () {\r\n            if (!$.data(this, \"plugin_\" + happymodal)) {\r\n                $.data(this, \"plugin_\" + happymodal,\r\n                new Plugin( this, options ));\r\n            }\r\n        });\r\n    };\r\n    \r\n    function onHandleModalOpenClick(e){\r\n        var $modal = this.filter('[data-happymodal=\"' + $(e.target).attr('data-happymodal-open') + '\"]');\r\n        if($modal.length > 0){\r\n            $.data($modal[0], \"plugin_\" + happymodal).show();    \r\n        }else{\r\n            console.log('happymodal', 'modal not exist');    \r\n        }\r\n        e.preventDefault(); \r\n    }\r\n    \r\n    function onWindowResize(e){\r\n        this.each(function () {\r\n            $.data(this, \"plugin_\" + happymodal).draw();  \r\n        });\r\n    }\r\n    \r\n    function bind(fn, context) {\r\n        return function() {\r\n            return fn.apply(context, arguments);\r\n        };\r\n    }\r\n        \r\n    function addEventListener(element, type, callback) {\r\n        element.on(type, callback);\r\n    }\r\n        \r\n    function removeEventListener(element, type, callback) {\r\n        element.off(type, callback);\r\n    }\r\n    \r\n    function dataInit(){\r\n        if($('[data-happymodal]').length > 0){\r\n            $('[data-happymodal]').happymodal();    \r\n        }\r\n    }\r\n    \r\n    $(function() {\r\n        dataInit();\r\n    });\r\n\r\n}));"],"sourceRoot":"/source/"}