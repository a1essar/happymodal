{"version":3,"sources":["jquery.happymodal.js"],"names":["factory","define","amd","jQuery","$","Plugin","element","options","this","dialog","content","close","backdrop","$elements","$element","$dialog","find","$content","$close","$backdrop","$body","modalBackdropTemplate","extend","defaults","data","_defaults","_name","happymodal","version","VERSION","show","hide","init","bindMethods","bindEventListeners","onHandleModalOpenClick","e","$modal","filter","target","attr","length","console","log","preventDefault","onWindowResize","each","draw","bind","fn","context","apply","arguments","addEventListener","type","callback","on","dataInit","backdropBlur","showCallback","hideCallback","prototype","render","append","is","window","width","height","modal","addClass","removeClass","not","onHandleCloseClick","onHandleModalBackClick"],"mappings":"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","file":"jquery.happymodal.min.js","sourcesContent":["/* ========================================================================\r\n * HappyModals: jquery.happymodal.js v1.0.0\r\n * ========================================================================\r\n * Copyright 2013 Happycms.ru\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * ======================================================================== \r\n */\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define('happymodal', ['jquery'], factory);\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n    \r\n    var VERSION = '1.0.0';\r\n    \r\n    // Create the defaults once\r\n    var happymodal = 'happymodal',\r\n        defaults = {\r\n            backdropBlur: false,\r\n            showCallback: function(el){\r\n                \r\n            },\r\n            hideCallback: function(el){\r\n                \r\n            },\r\n        };\r\n\r\n    function Plugin( element, options ) {\r\n        this.element = element;\r\n        this.dialog = '.js__happymodal-dialog';\r\n        this.content = '.js__happymodal-content';\r\n        this.close = '.js__happymodal-close';\r\n        this.backdrop = '.js__happymodal-backdrop';\r\n        \r\n        this.$elements = $('[data-happymodal]');\r\n        this.$element = $(this.element);\r\n        this.$dialog = this.$element.find(this.dialog);\r\n        this.$content = this.$element.find(this.content);\r\n        this.$close = this.$element.find(this.close);\r\n        this.$backdrop = $(this.backdrop);\r\n        \r\n        this.$body = $('body');\r\n        this.modalBackdropTemplate = '<div class=\"js__happymodal-backdrop happymodal-backdrop backdrop-hide\"></div>';\r\n\r\n        this.options = $.extend( {\r\n        }, defaults, options, $(this.element).data('happymodal-options')) ;\r\n        \r\n        this._defaults = defaults;\r\n        this._name = happymodal;\r\n        \r\n        this.version = VERSION;\r\n        this.show = this.show;\r\n        this.hide = this.hide;\r\n        \r\n        this.init();\r\n        \r\n        this.bindMethods();\r\n        this.bindEventListeners();\r\n    }\r\n\r\n    Plugin.prototype = {\r\n        init: function() {\r\n            this.render();    \r\n        },\r\n\r\n        render: function() {\r\n            this.draw();\r\n            \r\n            if(this.$backdrop.length <= 0){\r\n                this.$body.append(this.modalBackdropTemplate);\r\n                this.$backdrop = $(this.backdrop);     \r\n            }\r\n        },\r\n        \r\n        draw: function() {\r\n            if(!this.$element.is('.happymodal-open')){\r\n                return false;\r\n            }\r\n            \r\n            this.window = {\r\n                width: $(window).width(),\r\n                height: $(window).height(),\r\n            };\r\n            \r\n            this.modal = {\r\n                width: this.$dialog.width(),\r\n                height: this.$dialog.height(),\r\n            };\r\n            \r\n            if(this.window.height < this.modal.height){\r\n                this.$element.addClass('happymodal-static');\r\n                this.$body.addClass('body-happymodal-static');\r\n            }else{\r\n                this.$element.removeClass('happymodal-static');\r\n                this.$body.removeClass('body-happymodal-static');\r\n            }\r\n        },\r\n        \r\n        show: function() {\r\n            this.$elements.removeClass('happymodal-open');\r\n            this.$element.addClass('happymodal-open');\r\n            this.$backdrop.removeClass('backdrop-hide');  \r\n            \r\n            if(this.options.backdropBlur){\r\n                this.$body.find('> *').not('.happymodal-open').addClass('happymodal-blur');    \r\n            }\r\n            \r\n            this.draw();\r\n            \r\n            this.options.showCallback(this);\r\n        },\r\n        \r\n        hide: function(){\r\n            this.$element.removeClass('happymodal-open');\r\n            this.$backdrop.addClass('backdrop-hide');  \r\n            \r\n            if(this.options.backdropBlur){\r\n                this.$body.find('> *').not('.happymodal-open').removeClass('happymodal-blur');   \r\n            }  \r\n            \r\n            this.draw();\r\n            \r\n            this.options.hideCallback(this);\r\n        },\r\n        \r\n        onHandleCloseClick: function(e){\r\n            this.hide();\r\n            e.preventDefault();    \r\n        },\r\n        \r\n        onHandleModalBackClick: function(e){\r\n            if($(e.target).is('.happymodal-open')){\r\n                this.hide();\r\n                e.preventDefault();       \r\n            }  \r\n        },\r\n        \r\n        bindMethods: function(){\r\n            this.onHandleCloseClick = bind(this.onHandleCloseClick, this);\r\n            this.onHandleModalBackClick = bind(this.onHandleModalBackClick, this);\r\n        },\r\n        \r\n        bindEventListeners: function(){\r\n            addEventListener(this.$element, 'click', this.onHandleModalBackClick);\r\n            addEventListener(this.$close, 'click', this.onHandleCloseClick);\r\n        }\r\n    };\r\n\r\n    $.fn[happymodal] = function ( options ) {\r\n        // global events\r\n        onWindowResize = bind(onWindowResize, this); \r\n        onHandleModalOpenClick = bind(onHandleModalOpenClick, this);\r\n        addEventListener($(window), 'load', onWindowResize); \r\n        addEventListener($(window), 'resize', onWindowResize);\r\n        addEventListener($('[data-happymodal-open]'), 'click', onHandleModalOpenClick);\r\n        \r\n        return this.each(function () {\r\n            if (!$.data(this, \"plugin_\" + happymodal)) {\r\n                $.data(this, \"plugin_\" + happymodal,\r\n                new Plugin( this, options ));\r\n            }\r\n        });\r\n    };\r\n    \r\n    function onHandleModalOpenClick(e){\r\n        var $modal = this.filter('[data-happymodal=\"' + $(e.target).attr('data-happymodal-open') + '\"]');\r\n        if($modal.length > 0){\r\n            $.data($modal[0], \"plugin_\" + happymodal).show();    \r\n        }else{\r\n            console.log('happymodal', 'modal not exist');    \r\n        }\r\n        e.preventDefault(); \r\n    }\r\n    \r\n    function onWindowResize(e){\r\n        this.each(function () {\r\n            $.data(this, \"plugin_\" + happymodal).draw();  \r\n        });\r\n    }\r\n    \r\n    function bind(fn, context) {\r\n        return function() {\r\n            return fn.apply(context, arguments);\r\n        };\r\n    };\r\n        \r\n    function addEventListener(element, type, callback) {\r\n        element.on(type, callback);\r\n    };\r\n        \r\n    function removeEventListener(element, type, callback) {\r\n        element.off(type, callback);\r\n    };\r\n    \r\n    function dataInit(){\r\n        if($('[data-happymodal]').length > 0){\r\n            $('[data-happymodal]').happymodal();    \r\n        }\r\n    }\r\n    \r\n    $(function() {\r\n        dataInit();\r\n    });\r\n\r\n}));"],"sourceRoot":"/source/"}